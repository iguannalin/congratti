{"version":3,"sources":["src/main.js"],"names":["PopUpBox","shadow","attachShadow","mode","wrapper","document","createElement","setAttribute","icon","info","text","getAttribute","textContent","imgUrl","hasAttribute","img","src","appendChild","style","console","log","isConnected","HTMLElement","customElements","define"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;IACMA;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;AACA,8BAFU,CAIV;;AACA,QAAMC,MAAM,GAAG,MAAKC,YAAL,CAAkB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAlB,CAAf,CALU,CAOV;;;AACA,QAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAhB;AACAF,IAAAA,OAAO,CAACG,YAAR,CAAqB,OAArB,EAA8B,SAA9B;AAEA,QAAMC,IAAI,GAAGH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAE,IAAAA,IAAI,CAACD,YAAL,CAAkB,OAAlB,EAA2B,MAA3B;AACAC,IAAAA,IAAI,CAACD,YAAL,CAAkB,UAAlB,EAA8B,CAA9B;AAEA,QAAME,IAAI,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAG,IAAAA,IAAI,CAACF,YAAL,CAAkB,OAAlB,EAA2B,MAA3B,EAhBU,CAkBV;;AACA,QAAMG,IAAI,GAAG,MAAKC,YAAL,CAAkB,WAAlB,CAAb;;AACAF,IAAAA,IAAI,CAACG,WAAL,GAAmBF,IAAnB,CApBU,CAsBV;;AACA,QAAIG,MAAJ;;AACA,QAAG,MAAKC,YAAL,CAAkB,KAAlB,CAAH,EAA6B;AACzBD,MAAAA,MAAM,GAAG,MAAKF,YAAL,CAAkB,KAAlB,CAAT;AACH,KAFD,MAEO;AACHE,MAAAA,MAAM,GAAG,iBAAT;AACH;;AAED,QAAME,GAAG,GAAGV,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAS,IAAAA,GAAG,CAACC,GAAJ,GAAUH,MAAV;AACAL,IAAAA,IAAI,CAACS,WAAL,CAAiBF,GAAjB,EAhCU,CAkCV;;AACA,QAAMG,KAAK,GAAGb,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AAEAH,IAAAA,KAAK,CAACN,WAAN,yjBAtCU,CAoEV;;AACAX,IAAAA,MAAM,CAACgB,WAAP,CAAmBC,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AACApB,IAAAA,MAAM,CAACgB,WAAP,CAAmBb,OAAnB;AACAA,IAAAA,OAAO,CAACa,WAAR,CAAoBT,IAApB;AACAJ,IAAAA,OAAO,CAACa,WAAR,CAAoBR,IAApB;AAzEU;AA0Eb;;;iCA3EkBa,eA8EvB;;;AACAC,cAAc,CAACC,MAAf,CAAsB,WAAtB,EAAmCxB,QAAnC","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["// Create a class for the element\nclass PopUpBox extends HTMLElement {\n    constructor() {\n        // Always call super first in constructor\n        super();\n\n        // Create a shadow root\n        const shadow = this.attachShadow({mode: 'open'});\n\n        // Create spans\n        const wrapper = document.createElement('span');\n        wrapper.setAttribute('class', 'wrapper');\n\n        const icon = document.createElement('span');\n        icon.setAttribute('class', 'icon');\n        icon.setAttribute('tabindex', 0);\n\n        const info = document.createElement('span');\n        info.setAttribute('class', 'info');\n\n        // Take attribute content and put it inside the info span\n        const text = this.getAttribute('data-text');\n        info.textContent = text;\n\n        // Insert icon\n        let imgUrl;\n        if(this.hasAttribute('img')) {\n            imgUrl = this.getAttribute('img');\n        } else {\n            imgUrl = 'img/default.png';\n        }\n\n        const img = document.createElement('img');\n        img.src = imgUrl;\n        icon.appendChild(img);\n\n        // Create some CSS to apply to the shadow dom\n        const style = document.createElement('style');\n        console.log(style.isConnected);\n\n        style.textContent = `\n      .wrapper {\n        position: relative;\n      }\n\n      .info {\n        font-size: 0.8rem;\n        width: 200px;\n        display: inline-block;\n        border: 1px solid black;\n        padding: 10px;\n        background: white;\n        border-radius: 10px;\n        opacity: 0;\n        transition: 0.6s all;\n        position: absolute;\n        bottom: 20px;\n        left: 10px;\n        z-index: 3;\n      }\n\n      img {\n        width: 1.2rem;\n      }\n\n      .icon:hover + .info, .icon:focus + .info {\n        opacity: 1;\n      }\n    `;\n\n        // Attach the created elements to the shadow dom\n        shadow.appendChild(style);\n        console.log(style.isConnected);\n        shadow.appendChild(wrapper);\n        wrapper.appendChild(icon);\n        wrapper.appendChild(info);\n    }\n}\n\n// Define the new element\ncustomElements.define('popup-box', PopUpBox);\n"]}