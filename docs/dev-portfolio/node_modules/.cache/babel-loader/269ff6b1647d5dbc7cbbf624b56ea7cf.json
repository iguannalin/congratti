{"ast":null,"code":"var _jsxFileName = \"/Users/annaaa/Desktop/congratti/docs/dev-portfolio/src/components/Projecttextmesmthnice.js\";\nimport React from \"react\";\n\nconst Projecttextmesmthnice = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://annaylin.com/blog/text-me-smth-nice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 43\n    }\n  }, \"View Project\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"About this project\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"For this project, I wanted to challenge myself a little and create a simple messaging service that will send out a nice text to someone, every once in a while.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"I started with basically no knowledge, and received a lot of help from asking questions on StackOverflow. The problem I struggled with most was figuring out the tech stack, and what suited my use case best.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"This is how it currently runs: Google App Engine hosts the Python & Flask API route \\u2192 Heroku hosts a Python script that will run on a schedule to periodically call the Twilio messaging API \\u2192 and the user makes a call to the API when they submit a form on my website with their phone number.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"There are some security concerns for sure, and also it's currently running on the trial Twilio service, so I will work on polishing the app a bit more. Overall I had a lot of fun building it, and I got to play around with a tech stack I normally wouldn't be using.\")));\n};\n\nexport default Projecttextmesmthnice;","map":{"version":3,"sources":["/Users/annaaa/Desktop/congratti/docs/dev-portfolio/src/components/Projecttextmesmthnice.js"],"names":["React","Projecttextmesmthnice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAG,IAAA,IAAI,EAAC,6CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uKADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sNAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oTANJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gRAVJ,CAHJ,CADJ;AAoBH,CArBD;;AAuBA,eAAeA,qBAAf","sourcesContent":["import React from \"react\";\n\nconst Projecttextmesmthnice = () => {\n    return (\n        <div>\n            <div className=\"project-link\"><a href=\"https://annaylin.com/blog/text-me-smth-nice\">View Project</a></div>\n            <h2>About this project</h2>\n            <div className=\"project-details\">\n                <p>For this project, I wanted to challenge myself a little and create a simple messaging service that\n                    will send out a nice text to someone, every once in a while.</p>\n                <p>I started with basically no knowledge, and received a lot of help from asking questions on\n                    StackOverflow. The problem I struggled with most was figuring out the tech stack, and what suited\n                    my use case best.</p>\n                <p>This is how it currently runs: Google App Engine hosts the Python &\n                    Flask API route &rarr; Heroku hosts a Python script that will run on a schedule to periodically call the\n                    Twilio messaging API &rarr; and the user makes a call to the API when they submit a form on my website\n                    with their phone number.</p>\n                <p>There are some security concerns for sure, and also it's currently running on the trial Twilio\n                    service, so I will work on polishing the app a bit more. Overall I had a lot of fun building it, and\n                    I got to play around with a tech stack I normally wouldn't be using.</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Projecttextmesmthnice;\n\n"]},"metadata":{},"sourceType":"module"}