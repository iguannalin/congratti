{"ast":null,"code":"var _jsxFileName = \"/Users/annaaa/Desktop/congratti/docs/dev-portfolio/src/components/Projecttextmesmthnice.js\";\nimport React from \"react\";\n\nconst Projecttextmesmthnice = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://annaylin.com/blog/text-me-smth-nice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 43\n    }\n  }, \"View Project\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"About this project\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Currently trying to figure out how to use the Twilio sms api to take a list of phone numbers, and send out routine nice messages via a strange combination of Google App Engine, Heroku, and Python.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"The way it currently works is: someone enters their phone number into HTML form -> submitting form makes a POST request to a Python app hosted by Google App Engine -> Python app writes the new phone number to a file in an online repository and pushes it -> Python app hosted by Heroku automatically redeploys on every push and runs script periodically to send texts to the list of phone numbers\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"The hardest part was figuring out of all the technology out there, which ones to use for my use case and which were overkill. I think there's probably a way to do this in Django, to host a database that gets updated, instead of the combination of scripting a push in my app on Google App Engine, and waiting for that push on my app hosted on Heroku\")));\n};\n\nexport default Projecttextmesmthnice;","map":{"version":3,"sources":["/Users/annaaa/Desktop/congratti/docs/dev-portfolio/src/components/Projecttextmesmthnice.js"],"names":["React","Projecttextmesmthnice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAG,IAAA,IAAI,EAAC,6CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4MADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kZAJJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oWARJ,CAHJ,CADJ;AAiBH,CAlBD;;AAoBA,eAAeA,qBAAf","sourcesContent":["import React from \"react\";\n\nconst Projecttextmesmthnice = () => {\n    return (\n        <div>\n            <div className=\"project-link\"><a href=\"https://annaylin.com/blog/text-me-smth-nice\">View Project</a></div>\n            <h2>About this project</h2>\n            <div className=\"project-details\">\n                <p>Currently trying to figure out how to use the Twilio sms api to take a list of phone numbers, and\n                    send out routine nice messages via a strange combination of Google App Engine, Heroku, and\n                    Python.</p>\n                <p>The way it currently works is: someone enters their phone number into HTML form -> submitting form\n                    makes a POST request to a Python app hosted by Google App Engine -> Python app writes the new phone\n                    number to a file in an online repository and pushes it -> Python app hosted by Heroku automatically\n                    redeploys on every push and runs script periodically to send texts to the list of phone numbers</p>\n                <p>The hardest part was figuring out of all the technology out there, which ones to use for my use case\n                    and which were overkill. I think there's probably a way to do this in Django, to host a database that gets updated, instead of the combination of scripting a push in my app on Google App Engine, and waiting for that push on my app hosted on Heroku</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Projecttextmesmthnice;\n\n"]},"metadata":{},"sourceType":"module"}