{"version":3,"sources":["components/portfolio.js","components/reactprojects.js","components/pwu.js","components/shoplyfe.js","components/project.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["Portfolio","className","href","alt","src","Component","ReactProjects","PWU","ShopLyfe","Project","this","props","currentProject","ErrorMessage","show","showError","role","Home","state","isLoggedIn","userInput","handleProjectClick","bind","handleLoginClick","handleInputChange","hand1e","hand2e","modal","document","getElementById","thumbnails","querySelectorAll","thumbspans","modalImage","forEach","img","addEventListener","e","target","style","setProperty","span","id","value","setState","loadModalImage","b","CryptoJS","AES","decrypt","encrypt","toString","preventDefault","onClick","title","for","type","onChange","required","React","PureComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5680fc51.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Portfolio extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"project\">\n\t\t\t\t<div className=\"project-title\">Congratti</div>\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>Three.js Meets HTML</p>\n\t\t\t    \t\t<p><a href=\"https://github.com/seasons986/congratti\" alt=\"Congratti Project on GitHub\">GitHub</a></p>\n\t\t\t    \t\t<p><a href=\"http://annaylin.com/\" alt=\"Anna's Website\">Live Demo</a></p>\n\t\t\t    \t\t<p>Problem: A clean, portfolio website that is more interactive.</p>\n\t\t\t    \t\t<p>Solution: Three.js for smooth and fast animations that can showcase my skills and my design philosophy as a front-end developer.</p>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n\t\t\t    \t\t<p>I've been wanting for some time to integrate Three.js into my websites, since my introduction to WebGL. Knowing WebGL first certainly eased my introduction to Three.js.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"./images/congratti-demo.png\" alt=\"Confetti Portfolio Site\"/>\n\t\t\t    \t\t\t<figcaption>The result! Hooray!</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t\t<p>The biggest challenge for me was when I went onto the site on my phone. The long vertical display made the window width less than the window height which would result in the animation being extremely laggy. I messed around trying to figure why exactly it was lagging--I decreased the number of confetto (:), reversed width and height, went on StackOverflow. Finally, it was that optimal animation capped at the max window height of around 2/3 of the mobile window height (if you know why please email me).</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass ReactProjects extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"project\">\n\t\t\t\t<div className=\"project-title\">\n\t\t\t\t\t<p>React Web Apps</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>Eat Your Vegetables</p>\n\t\t\t    \t\t<p><a href=\"https://github.com/seasons986/eaturveg\" alt=\"Eaturveg Demo\">GitHub</a></p>\n\t\t\t    \t\t<p><a href=\"https://seasons986.github.io/eaturveg/\" alt=\"Eaturveg Live Demo\">Live Demo</a></p>\n\t\t\t    \t\t<p>Problem: Personally, I spend a lot of time googling what vegetables are in season as I want to eat more ethically and healthily.</p>\n\t\t\t    \t\t<p>Solution: A web app that can update itself and show me what vegetables are in season this month.</p>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n    \t\t    \t\t<section className=\"image\">\n    \t\t\t    \t\t<img src=\"./images/eaturveg-demo.png\" alt=\"Eaturveg Demo\"/>\n    \t\t    \t\t\t<figcaption>Displays the month, and a list of vegetables in season linking to a details page on the CUESA site.</figcaption>\n    \t\t    \t\t</section>\n    \t\t    \t\t<p>The first issue I came across was finding an API that was not overkill for this simple project. I couldn't, so I found <a href=\"https://cuesa.org/eat-seasonally/charts/vegetables\" alt=\"CUESA Seasonal Vegetables Chart\">this website (CUESA)</a> and scraped the data from the site, saving it as a JSON file I imported into my React app.</p>\n    \t\t    \t\t<p>From there on, it was just the matter of parsing the JSON data and displaying it in a list complete with the links to the appropriate CUESA page about the vegetable.</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>Tasks Dashboard</p>\n\t\t\t    \t\t<p><a href=\"https://github.com/seasons986/tasks-api\" alt=\"Tasks on GitHub\">GitHub</a></p>\n\t\t\t    \t\t<p>Problem: Reimagine the task dashboard, using an API.</p>\n\t\t\t    \t\t<p>Solution: To present a different way to display user's tasks if they were only focusing on one project for example, I designed a whiteboard-inspired layout using React to display tasks conditionally.</p>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n    \t\t    \t\t<p>I designed the layout to have a clean and energizing look, and drew the background on Adobe Illustrator, with bright colors. One of the biggest problem I had was trying to implement a hide/show feature. It was difficult figuring out how to do it in React, as someone new to the framework.</p>\n    \t\t    \t\t<p>Props saved my life and once I got into the hang of passing props to children components and saving states in the parent components, things fell in place together.</p>\n    \t\t    \t\t<section className=\"image\">\n    \t\t\t    \t\t<img src=\"./images/tasks-demo.gif\" alt=\"Tasks Demo\"/>\n    \t\t    \t\t\t<figcaption>The user can hide and display tasks.</figcaption>\n    \t\t    \t\t</section>\n    \t\t    \t\t<p>I passed a TaskList to the App Dashboard (which would pull tasks from the API), consisting of individual Tasks with attributes of hide/show. Any change will re-render the TaskList with the updates.</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>Project Undertone</p>\n\t\t\t    \t\t<p><a href=\"https://github.com/seasons986/undertone\" alt=\"Project Undertone on GitHub\">GitHub</a></p>\n\t\t\t    \t\t<p><a href=\"https://seasons986.github.io/undertone/\" alt=\"Live Demo of Project Undertone\">Live Demo</a></p>\n\t\t\t    \t\t<p>Problem: It's hard for shoppers to find clothes they can hope to look good in on shopping sites.</p>\n\t\t\t    \t\t<p>Solution: By filtering the catalogue by the colors that will best fit a certain undertone, clothing search results can have a higher guarantee of looking good on shoppers.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"./images/undertone-demo.png\" alt=\"Landing page for Undertone\"/>\n\t\t\t    \t\t\t<figcaption>I had a lot of fun playing around with the landing page.</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n\t\t\t    \t\t<p></p>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"technology\">\n\t\t\t    \t\t<p>Tech Stack: React, HTML, CSS (SASS)</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ReactProjects;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass PWU extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"project\">\n\t\t\t\t<div className=\"project-title\">Pacific Workers' University</div>\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>An Interactive Learning Site for Employees</p>\n\t\t\t    \t\t<p><a href=\"https://codepen.io/collection/XzwqKr/\" alt=\"Link to Site Prototypes on CodePen\">Prototypes</a></p>\n\t\t\t    \t\t<p><a href=\"http://pacificworkersuniversity.com/\" alt=\"Pacific Workers' University Site\">Live Demo</a></p>\n\t\t\t    \t\t<p>Problem: As the law firm expands and takes on more clients, the amount of legal information and the number of people who need access to them increases. We needed to move their library of information to an online content management system that can be edited and accessed by current and new staff.</p>\n\t\t\t    \t\t<p>Solution: An online learning management system built on WordPress.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"./images/pwu-demo.gif\" alt=\"PWU Site Demo\"/>\n\t\t\t    \t\t\t<figcaption>\n\t\t\t    \t\t\t\tUpon logging in, the user is able to view all their courses to learn the information they need.\n\t\t\t    \t\t\t</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n\t\t\t    \t\t<p>The decision to use WordPress was based around the fact that managers needed to have administrative access to the site to add and edit content.</p>\n\t\t\t    \t\t<p>From there I was able to have more flexibility in designing the layout of the site. To retain user interest without overcomplicating things, I prototyped, discussed the design with decision-makers, user-tested, researched web accessibility and came to the final look of the site.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"./images/pwu-course-demo.gif\" alt=\"PWU Course Demo\"/>\n\t\t\t    \t\t\t<figcaption>The courses are animated like pop-out cards. Both the site and course cards give feedback to user interaction.</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t\t<p>I also added a night-mode feature after an administrator requested for a lower color-contrast on a text-heavy page.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"./images/pwu-theme-demo.gif\" alt=\"PWU Theme Demo\"/>\n\t\t\t    \t\t\t<figcaption>I used <code>window.sessionstorage</code> to store and save each user's theme preferences on the site.</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"technology\">\n\t\t\t    \t\t<p>Tech Stack: WordPress (PHP), HTML, CSS, JavaScript</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PWU;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass ShopLyfe extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"project\">\n\t\t\t\t<div className=\"project-title\">Shoplyfe</div>\n\t\t\t\t<div className=\"project-desc\">\n\t\t\t    \t<div className=\"details\">\n\t\t\t    \t\t<p>ShopLyfe generates an automatic grocery shopping list based on the user's recipes.</p>\n\t\t\t    \t\t<p><a href=\"https://github.com/seasons986/Sh0pLyf3/tree/developer/ShopLyfe\" alt=\"Link to GitHub repo\">GitHub</a></p>\n\t\t\t    \t\t<p>Problem: Busy consumers may spend a lot of time at a grocery store thinking of ingredients they need to buy for a recipe, and may forget what they already have at home.</p>\n\t\t\t    \t\t<p>Solution: A grocery shopping list web app where the user can select items they already have, save it to an inventory unique to the user, as well as calculate the ingredients they'll need to buy based on recipes they want to make.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t    \t\t<img src=\"images/shoplyfe-demo-check.gif\" alt=\"ShopLyfe Item Check\"/>\n\t\t    \t\t\t<figcaption>User checking off boxes of items they already have</figcaption>\n\t\t\t    \t\t</section>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"process\">\n\t\t\t    \t\t<p>We started every meeting with a quick SCRUM check-in, going around the table answering three questions:</p>\n\t\t\t    \t\t<blockquote>What have I done since the last meeting? What will I be working on today? Are there any obstacles in my way?</blockquote>\n\t\t\t    \t\t<p>We then would start working on whatever needed to be done according to that week's sprint goals--which we planned on the first meeting and drew up on a SCRUM board.</p>\n\t\t\t    \t\t<section className=\"image\">\n\t\t\t\t    \t\t<img src=\"images/sprint-goals.jpg\" alt=\"Our SCRUM Board\"/>\n\t\t\t\t    \t\t<figcaption>Our SCRUM board</figcaption>\n\t\t\t\t    \t</section>\n\t\t\t    \t\t<p>Along with sprint goals, each sprint was split into user stories we created based on user profiles we built around who we think would be our app's primary users and what their needs when using our app would be.</p>\n\t\t\t    \t</div>\n\t\t\t    \t<div className=\"technology\">\n\t\t\t    \t\t<p>Tech Stack: AWS, Python, Django, SQLite, HTML, CSS, Bootstrap.js</p>\n\t\t\t    \t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ShopLyfe;","import React, { Component } from 'react';\nimport Portfolio from './portfolio';\nimport ReactProjects from './reactprojects';\nimport PWU from './pwu';\nimport Shoplyfe from './shoplyfe';\nimport '../App.css';\n\nclass Project extends Component {\n  render() {\n    if (this.props.currentProject === 'portfolio') {\n      return (\n        <div className=\"Project\">\n            <Portfolio />\n        </div>\n      );\n    } else if (this.props.currentProject === 'react') {\n      return (\n        <div className=\"Project\">\n            <ReactProjects />\n        </div>\n      );\n    } else if (this.props.currentProject === 'pwu') {\n      return (\n        <div className=\"Project\">\n            <PWU />\n        </div>\n      );\n    } else if (this.props.currentProject === 'shoplyfe') {\n      return (\n        <div className=\"Project\">\n            <Shoplyfe />\n        </div>\n      );\n    } else return (\n      <div className=\"Project\">\n        <p className=\"home\">\n          Hi, welcome to my projects blog.<br/>\n          <small>Select one from the left.</small>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Project;","import React from 'react';\nimport Project from './project';\nimport '../App.css';\nimport CryptoJS from 'crypto-js';\n\nfunction ErrorMessage(show) {\n  if (!show.showError) {\n    return null;\n  }\n\n  return (\n    <span className=\"error-msg\" role=\"alert\">\n      Wrong password!\n    </span>\n  )\n}\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentProject: 'home',\n      isLoggedIn: false,\n      userInput: '',\n      showError: false\n    }\n\n    this.handleProjectClick = this.handleProjectClick.bind(this);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.hand1e = '696775616e6173';\n    this.hand2e = 'U2FsdGVkX1/F7PWyQmGqvqirIIUWH39pP5SNOFICxfs=';\n  }\n\n  loadModalImage() {\n    var modal = document.getElementById('modal');\n    var thumbnails = document.querySelectorAll('.image > img');\n\n    var thumbspans = document.querySelectorAll('.image > span');\n    var modalImage = document.getElementById('modalimage');\n    thumbnails.forEach((img) => {\n      img.addEventListener('click', function(e) {\n        modalImage.src = e.target.src;\n        modal.style.setProperty('visibility', 'visible');\n      });\n    })\n    thumbspans.forEach((span) => {\n      span.addEventListener('click', function(e) {\n        modalImage.src = e.target.id;\n        modal.style.setProperty('visibility', 'visible');\n      });\n    })\n\n    modal.addEventListener('click', function() {\n      modal.style.setProperty('visibility', 'hidden');\n    });\n  }\n\n  handleProjectClick(e) {\n    if (e.target.value) {\n      this.setState({\n        currentProject: e.target.value\n      }, () => {\n        this.loadModalImage();\n      });\n    }\n  }\n\n  handleLoginClick(e) {\n    const b = CryptoJS.AES.decrypt(CryptoJS.AES.encrypt(this.state.userInput, this.hand2e), this.hand2e).toString() === this.hand1e;\n    this.setState({\n      isLoggedIn: b,\n      showError: !b\n    });\n\n    if (!this.state.isLoggedIn) {\n      e.preventDefault();\n    }\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      userInput: e.target.value\n    })\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return (\n        <div className=\"App\">\n        <div className=\"navigation\">\n          <ul className=\"projects-list\">\n            <p className=\"navi-title\">Projects</p>\n            <li><button onClick={this.handleProjectClick} value=\"portfolio\">Congratti</button></li>\n            <li><button onClick={this.handleProjectClick} value=\"react\">React Web Apps</button></li>\n            <li><button onClick={this.handleProjectClick} value=\"pwu\">Pacific Workers' University</button></li>\n            <li><button onClick={this.handleProjectClick} value=\"shoplyfe\">ShopLyfe</button></li>\n            <a href=\"http://annaylin.com/\" title=\"Back to Anna's Homepage\"><p>Home</p></a>\n          </ul>\n        </div>\n        <div className=\"modal\" id=\"modal\">\n            <img src=\"./images/example.png\" id=\"modalimage\" alt=\"Modal Lightbox\"/>\n        </div>\n        <Project currentProject={this.state.currentProject} />\n      </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <form className=\"Login\">\n            <div>\n              <ErrorMessage showError={this.state.showError} />\n            </div>\n            <div className=\"input-box\">\n              <label for=\"password-input\">Enter password:</label>\n              <input id=\"password-input\" className={`${this.state.showError ? 'border-red' : ''}`} type=\"password\" onChange={this.handleInputChange} required></input>\n            </div>\n            <button onClick={this.handleLoginClick}>Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Home from './components/home';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Home />\n    )\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}