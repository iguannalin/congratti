Index: docs/src/animations/confetti/confetti.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Using Karim Maaloul's code as a guide (https://bit.ly/2JU9XdV)\n\nimport * as THREEOrbit from \"../../utils/three-OrbitControls.js\";\nimport * as THREE from \"../../utils/three.module.js\";\n\n// THREE VARIABLES\nlet scene,\n    camera,\n    controls,\n    fieldOfView,\n    aspectRatio,\n    nearPlane,\n    farPlane,\n    renderer,\n    container;\n\n// SCREEN VARIABLES\nlet height,\n    width,\n    windowHalfX,\n    windowHalfY;\n\n// CONFETTI\nlet confetti = [],\n    confettiColors = [0xC9D757, 0xDE4B72, 0xF1BA48, 0xDE7567, 0x4C94BE, 0xF4F0C9, 0xD93732, 0xC0C1BD, 0xE07F8D, 0xED3D9, 0xF9EF82, 0xFBFCF7],\n    fallingSpeed = 0;\n\n// init SCENE\nfunction initScene() {\n    scene = new THREE.Scene();\n    height = window.innerHeight;\n    width = window.innerWidth;\n    aspectRatio = width / height;\n    fieldOfView = 60;\n    nearPlane = 1;\n    farPlane = 2000;\n    camera = new THREE.PerspectiveCamera(\n        fieldOfView,\n        aspectRatio,\n        nearPlane,\n        farPlane\n    );\n    camera.position.y = 0;\n    camera.position.z = 800;\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\n    renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(width, height);\n    container = document.body;\n    container.appendChild(renderer.domElement);\n    container.setAttribute('aria-label', 'interactive graphic of falling confetti');\n    windowHalfX = width / 2;\n    windowHalfY = height / 2;\n    window.addEventListener('resize', onWindowResize, false);\n    controls = new THREEOrbit.OrbitControls(camera, renderer.domElement);\n}\n\nfunction onWindowResize() {\n    height = window.innerHeight;\n    width = window.innerWidth;\n    windowHalfX = width / 2;\n    windowHalfY = height / 2;\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n}\n\nfunction createConfetti(t) {\n    for (let i = 0; i < t; i++) {\n        let con = new Confetti(confettiColors[Math.round(Math.random() * 10) % confettiColors.length]);\n        con.threegroup.position.x = Math.sin(Math.PI * (Math.random())) * (width / 6) - (Math.random() * 300);\n        con.threegroup.position.y = Math.cos(Math.PI * (Math.random())) * (height) - (Math.random() * 350);\n        con.threegroup.position.z = Math.random() * 500 - t;\n        confetti.push(con);\n        scene.add(con.threegroup);\n    }\n}\n\n// CONFETTI\nfunction Confetti(c) {\n    let plane = new THREE.PlaneBufferGeometry(width / 30, width / 10);\n    this.material = new THREE.MeshBasicMaterial({\n        color: c,\n        transparent: true,\n        opacity: Math.random() * 1.2,\n        side: THREE.DoubleSide\n    });\n    this.confetto = new THREE.Mesh(plane, this.material);\n    this.threegroup = new THREE.Group();\n    this.threegroup.add(this.confetto);\n    this.threegroup.lookAt(new THREE.Vector3(Math.random() * 10, Math.random() * 80, 60));\n};\n\n// RESET CONFETTI\nConfetti.prototype.update = function () {\n    if (this.threegroup.position.y < height && this.threegroup.position.y > -height) {\n        this.threegroup.position.y -= 1;\n        this.threegroup.rotateY(Math.random() * 0.05);\n        this.threegroup.rotateZ(Math.random() * 0.01);\n    } else {\n        this.threegroup.position.y = height - 1;\n    }\n};\n\n// METHODS\nfunction loop() {\n    render();\n    for (let i = 0; i < confetti.length; i++) {\n        confetti[i].update();\n    }\n    setTimeout(() => {\n        requestAnimationFrame(loop)\n    }, fallingSpeed);\n}\n\nfunction render() {\n    if (controls) controls.update();\n    renderer.render(scene, camera);\n}\n\nfunction handleClick(e) {\n    const r = Math.random() < .5;\n    document.body.style.backgroundColor = r && 'black' || '#fff9e6';\n    document.body.style.color = r && '#fff9e6' || '#2a3340';\n    fallingSpeed = r && 25 || 0;\n}\n\nfunction init() {\n    document.addEventListener('click', handleClick)\n    initScene();\n    createConfetti(25);\n    loop();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docs/src/animations/confetti/confetti.js	(revision 4290ba87ada8559d9fc5e469d81158bc790397aa)
+++ docs/src/animations/confetti/confetti.js	(date 1591146675000)
@@ -1,8 +1,12 @@
-// Using Karim Maaloul's code as a guide (https://bit.ly/2JU9XdV)
-
+import isMobile from "../../utils/is-mobile.js";
 import * as THREEOrbit from "../../utils/three-OrbitControls.js";
 import * as THREE from "../../utils/three.module.js";
 
+// Using Karim Maaloul's code as a guide (https://bit.ly/2JU9XdV)
+
+let isMobileDevice = isMobile.any();
+console.log('**Hi ', isMobileDevice);
+
 // THREE VARIABLES
 let scene,
     camera,
